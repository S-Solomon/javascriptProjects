{"id":"js/shaders/fragmentshader.glsl","dependencies":[{"name":"/Users/samuelsolomon/Documents/Javascript-Projects/THREEJS-imageRGB-Split/package.json","includedInParent":true,"mtime":1619165627231}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform float uAlpha;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// void main(){\\n//     gl_FragColor = vec4(255.,255.,255.,255.);\\n// }\\n\\n uniform sampler2D uTexture;\\n uniform float uAlpha;\\n uniform vec2 uOffset;\\n varying vec2 vUv;\\n\\nvec3 rgbShift(sampler2D textureImage, vec2 uv, vec2 offset) {\\n   float r = texture2D(textureImage,uv + offset).r;\\n   vec2 gb = texture2D(textureImage,uv).gb;\\n   return vec3(r,gb);\\n }\\n\\nvoid main() {\\n   vec3 color = rgbShift(uTexture,vUv,uOffset);\\n   gl_FragColor = vec4(color,uAlpha);\\n }\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shaders/fragmentshader.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shaders/fragmentshader.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shaders/fragmentshader.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shaders/fragmentshader.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaders/fragmentshader.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":616},"source":"js/shaders/fragmentshader.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaders/fragmentshader.glsl":"module.exports=\"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform float uAlpha;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// void main(){\\n//     gl_FragColor = vec4(255.,255.,255.,255.);\\n// }\\n\\n uniform sampler2D uTexture;\\n uniform float uAlpha;\\n uniform vec2 uOffset;\\n varying vec2 vUv;\\n\\nvec3 rgbShift(sampler2D textureImage, vec2 uv, vec2 offset) {\\n   float r = texture2D(textureImage,uv + offset).r;\\n   vec2 gb = texture2D(textureImage,uv).gb;\\n   return vec3(r,gb);\\n }\\n\\nvoid main() {\\n   vec3 color = rgbShift(uTexture,vUv,uOffset);\\n   gl_FragColor = vec4(color,uAlpha);\\n }\";"},"lineCount":null}},"error":null,"hash":"1fb2321d2abe597f40d067df6128c2f8","cacheData":{"env":{}}}